[gd_scene load_steps=3 format=3 uid="uid://da1pty63rplb7"]

[sub_resource type="GDScript" id="GDScript_fjldl"]
script/source = "extends RigidBody2D



var is_hit = false
var idle_platform
var on_floor 

func _process(_delta):
	pass
	#match SceneInfo.platform_current_line:
		#SceneInfo.platform_lines.bottom : z_index = 7
		#SceneInfo.platform_lines.middle : z_index = 5
		#SceneInfo.platform_lines.top    : z_index = 3


func _physics_process(delta):
	print(\"sleeping : \",sleeping)
	if(linear_velocity.x<100   ):
		apply_central_impulse(Vector2(100,0))
		print(linear_velocity)
	pass
	#idle_platform = SceneInfo.platform_state == SceneInfo.platform_states.idle
	#on_floor = is_on_floor()
#
	#if not is_on_floor():
		#animation_player.play(\"jump\")
		#velocity.y += SceneInfo.GRAVIRTY * delta
		#SceneInfo.character_state=SceneInfo.character_states.jumping
	#else:
		#SceneInfo.character_state=SceneInfo.character_states.runing
		#
		#if is_hit:
			#animation_player.play(\"hit\")
		#else:
			#animation_player.play(\"run\")

	#if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		#velocity.y = SceneInfo.JUMP_VELOCITY
#
	#move_and_slide()


func _touch_pressed_jump():
	pass
	#if on_floor and  idle_platform and (not is_hit):
		#velocity.y = SceneInfo.JUMP_VELOCITY


func _on_detector_area_entered(area):
	pass
	#if (\"line\" in area) and (SceneInfo.platform_current_line == area.line):
		#if area.is_in_group(\"buff\"):
			#print(\"point\")
			#SceneInfo.points += area.point
			#SceneInfo.coin_count -= 1
			#area.queue_free()
#
		#if area.is_in_group(\"obstacle\") and (not is_hit):
			##print(\"obstacle\")
			#on_play_hit() 
			#SceneInfo.life -= 1
			#SceneInfo.scene_speed = SceneInfo.scene_base_speed

func on_play_walk():
	pass
	#animation_player.play(\"run\")
	#sprite.modulate.a = 1
	#is_hit = false


func on_play_hit():
	pass
	#sprite.modulate.a = 0.5
	#animation_player.play(\"hit\")
	#is_hit = true


"

[sub_resource type="CircleShape2D" id="CircleShape2D_37bsd"]
radius = 30.0

[node name="character" type="RigidBody2D" groups=["character_line_detector"]]
y_sort_enabled = true
collision_mask = 3
constant_force = Vector2(5, 0)
script = SubResource("GDScript_fjldl")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_37bsd")
